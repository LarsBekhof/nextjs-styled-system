{"ast":null,"code":"var _jsxFileName = \"/home/lars/Code/manager/src/pages/playground.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box } from '../atoms/layout';\nimport { TextInput, Button, TextareaInput } from '../atoms/input';\nimport { Heading, Paragraph } from '../atoms/typography';\nimport { Modal } from '../atoms/modals';\nexport default (() => {\n  const {\n    0: modalIsOpen,\n    1: setModalIsOpen\n  } = useState(true);\n  return __jsx(React.Fragment, null, __jsx(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"This is a flex element.\"), __jsx(Box, {\n    width: \"300px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    defaultValue: \"This is an input.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), __jsx(Box, {\n    width: \"300px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    placeholder: \"This is an input with placeholder.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), __jsx(Box, {\n    width: \"300px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    defaultValue: \"This is an input with an error.\",\n    error: \"This is the error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), __jsx(Box, {\n    width: \"300px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    defaultValue: \"This is an input with a label.\",\n    label: \"This is the label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), __jsx(Box, {\n    width: \"300px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    defaultValue: \"This is an input with a label and an error.\",\n    label: \"This is the label\",\n    error: \"This is the error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), __jsx(Box, {\n    width: \"300px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(TextareaInput, {\n    defaultValue: \"This is a textarea.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"This is a heading 1.\"), __jsx(Heading, {\n    variant: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"This is a heading 2.\"), __jsx(Heading, {\n    variant: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"This is a heading 3.\"), __jsx(Paragraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" This is a paragraph. \"), __jsx(Paragraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"This is the second paragraph.\"), __jsx(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"This is a button\"), __jsx(Button, {\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"This is a text button\"), __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Button opens the modal\")), modalIsOpen && __jsx(Modal, {\n    title: __jsx(Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"This is a modal\"),\n    onClose: () => setModalIsOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n});","map":{"version":3,"sources":["/home/lars/Code/manager/src/pages/playground.tsx"],"names":["React","useState","Box","TextInput","Button","TextareaInput","Heading","Paragraph","Modal","modalIsOpen","setModalIsOpen"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { Box } from '../atoms/layout';\nimport { TextInput, Button, TextareaInput } from '../atoms/input';\nimport { Heading, Paragraph } from '../atoms/typography';\nimport { Modal } from '../atoms/modals';\n\nexport default () => {\n\tconst [modalIsOpen, setModalIsOpen] = useState(true);\n\n\treturn (\n\t\t<>\n\t\t\t<Box>This is a flex element.</Box>\n\t\t\t<Box width=\"300px\">\n\t\t\t\t<TextInput defaultValue=\"This is an input.\" />\n\t\t\t</Box>\n\t\t\t<Box width=\"300px\">\n\t\t\t\t<TextInput placeholder=\"This is an input with placeholder.\" />\n\t\t\t</Box>\n\t\t\t<Box width=\"300px\">\n\t\t\t\t<TextInput\n\t\t\t\t\tdefaultValue=\"This is an input with an error.\"\n\t\t\t\t\terror=\"This is the error\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Box width=\"300px\">\n\t\t\t\t<TextInput\n\t\t\t\t\tdefaultValue=\"This is an input with a label.\"\n\t\t\t\t\tlabel=\"This is the label\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Box width=\"300px\">\n\t\t\t\t<TextInput\n\t\t\t\t\tdefaultValue=\"This is an input with a label and an error.\"\n\t\t\t\t\tlabel=\"This is the label\"\n\t\t\t\t\terror=\"This is the error\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Box width=\"300px\">\n\t\t\t\t<TextareaInput\n\t\t\t\t\tdefaultValue=\"This is a textarea.\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Heading>This is a heading 1.</Heading>\n\t\t\t<Heading variant=\"2\">This is a heading 2.</Heading>\n\t\t\t<Heading variant=\"3\">This is a heading 3.</Heading>\n\t\t\t<Paragraph> This is a paragraph. </Paragraph>\n\t\t\t<Paragraph>This is the second paragraph.</Paragraph>\n\t\t\t<Box>\n\t\t\t\t<Button>This is a button</Button>\n\t\t\t\t<Button variant=\"text\">This is a text button</Button>\n\t\t\t\t<Button>Button opens the modal</Button>\n\t\t\t</Box>\n\t\t\t{modalIsOpen && <Modal\n\t\t\t\ttitle={<Heading>This is a modal</Heading>}\n\t\t\t\tonClose={() => setModalIsOpen(false)}\n\t\t\t/>}\n\t\t</>\n\t);\n};"]},"metadata":{},"sourceType":"module"}