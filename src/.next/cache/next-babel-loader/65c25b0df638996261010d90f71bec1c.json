{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"/home/lars/Code/manager/src/molecules/timer/clock.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Flex, Box } from '../../atoms/layout';\nimport { Heading } from '../../atoms/typography';\nvar size = 500;\nvar indicatorSize = 10;\nvar clockNumbers = [12, 3, 6, 9];\nvar secInDeg = 360 / 60;\nvar minInDeg = 360 / 60;\nvar houInDeg = 360 / 12;\n\nvar getHandSize = function getHandSize(shorten) {\n  return size / 2 - shorten;\n};\n\nvar getIndicatorOffset = function getIndicatorOffset() {\n  return (size - indicatorSize) / 2;\n};\n\nvar getNumberOffset = function getNumberOffset(inset) {\n  return size / 2 - inset;\n};\n\nvar getDegSec = function getDegSec() {\n  return secInDeg * new Date().getSeconds();\n};\n\nvar getDegMin = function getDegMin() {\n  return minInDeg * new Date().getMinutes();\n};\n\nvar getDegHou = function getDegHou() {\n  return houInDeg * (new Date().getHours() > 11 ? new Date().getHours() - 11 : new Date().getHours());\n};\n\nexport var Clock = function Clock() {\n  var _useState = useState(getDegSec()),\n      degSec = _useState[0],\n      setDegSec = _useState[1];\n\n  var _useState2 = useState(getDegMin()),\n      degMin = _useState2[0],\n      setDegMin = _useState2[1];\n\n  var _useState3 = useState(getDegHou()),\n      degHou = _useState3[0],\n      setDegHou = _useState3[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      setDegSec(getDegSec());\n      setDegMin(getDegMin());\n      setDegHou(getDegHou());\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [degSec, degMin, degHou]);\n  return __jsx(Flex, {\n    m: \"100px auto 0 auto\",\n    height: size,\n    width: size,\n    bg: \"reds.100\",\n    borderRadius: \"100%\",\n    borderStyle: \"solid\",\n    borderWidth: 2,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(Box, {\n    height: \"15px\",\n    width: \"15px\",\n    bg: \"black\",\n    borderRadius: \"100%\",\n    zIndex: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), _toConsumableArray(Array(60).keys()).map(function (key) {\n    return __jsx(Indicator, {\n      key: key,\n      deg: minInDeg * (key + 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }), __jsx(ClockNumber, {\n    number: 12,\n    deg: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(ClockHand, {\n    color: \"reds.300\",\n    handSize: getHandSize(30),\n    deg: degSec,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), __jsx(ClockHand, {\n    color: \"black\",\n    handSize: getHandSize(30),\n    deg: degMin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(ClockHand, {\n    color: \"black\",\n    handSize: getHandSize(100),\n    deg: degHou,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }));\n};\n\nvar Indicator = function Indicator(_ref) {\n  var deg = _ref.deg;\n  return __jsx(Box, {\n    position: \"absolute\",\n    bg: \"black\",\n    height: indicatorSize,\n    width: \"3px\",\n    style: {\n      transform: \"rotate(\".concat(deg, \"deg) translateY(-\").concat(getIndicatorOffset(), \"px)\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  });\n};\n\nvar ClockNumber = function ClockNumber(_ref2) {\n  var number = _ref2.number,\n      deg = _ref2.deg;\n  return __jsx(Box, {\n    position: \"absolute\",\n    height: size / 2,\n    style: {\n      transform: \"rotate(\".concat(deg, \"deg) translateY(-\").concat(size, \"px)\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, number));\n};\n\nvar ClockHand = function ClockHand(_ref3) {\n  var color = _ref3.color,\n      handSize = _ref3.handSize,\n      deg = _ref3.deg;\n  return __jsx(Box, {\n    height: handSize,\n    width: \"5px\",\n    bg: color,\n    position: \"absolute\",\n    style: {\n      transform: \"rotate(\".concat(deg, \"deg) translateY(-\").concat(handSize / 2, \"px)\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  });\n};","map":{"version":3,"sources":["/home/lars/Code/manager/src/molecules/timer/clock.tsx"],"names":["React","useEffect","useState","Flex","Box","Heading","size","indicatorSize","clockNumbers","secInDeg","minInDeg","houInDeg","getHandSize","shorten","getIndicatorOffset","getNumberOffset","inset","getDegSec","Date","getSeconds","getDegMin","getMinutes","getDegHou","getHours","Clock","degSec","setDegSec","degMin","setDegMin","degHou","setDegHou","interval","setInterval","clearInterval","Array","keys","map","key","Indicator","deg","transform","ClockNumber","number","ClockHand","color","handSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Flex, Box } from '../../atoms/layout';\nimport { Heading } from '../../atoms/typography';\n\nconst size = 500;\nconst indicatorSize = 10;\n\nconst clockNumbers = [12, 3, 6, 9];\n\nconst secInDeg = 360 / 60;\nconst minInDeg = 360 / 60;\nconst houInDeg = 360 / 12;\n\nconst getHandSize = (shorten: number) => (size / 2 - shorten);\nconst getIndicatorOffset = () => ((size - indicatorSize) / 2);\nconst getNumberOffset = (inset: number) => (size / 2 - inset);\n\nconst getDegSec = () => (secInDeg * (new Date()).getSeconds());\nconst getDegMin = () => (minInDeg * (new Date()).getMinutes());\nconst getDegHou = () => (houInDeg * ((new Date()).getHours() > 11 ? (new Date()).getHours() - 11 : (new Date()).getHours()));\n\nexport const Clock: React.FC = () => {\n\tconst [degSec, setDegSec] = useState(getDegSec());\n\tconst [degMin, setDegMin] = useState(getDegMin());\n\tconst [degHou, setDegHou] = useState(getDegHou());\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tsetDegSec(getDegSec());\n\t\t\tsetDegMin(getDegMin());\n\t\t\tsetDegHou(getDegHou());\n\t\t}, 1000);\n\t\treturn () => clearInterval(interval);\n\t}, [degSec, degMin, degHou]);\n\n\treturn (\n\t\t<Flex\n\t\t\tm=\"100px auto 0 auto\"\n\t\t\theight={size}\n\t\t\twidth={size}\n\t\t\tbg=\"reds.100\"\n\t\t\tborderRadius=\"100%\"\n\t\t\tborderStyle=\"solid\"\n\t\t\tborderWidth={2}\n\t\t\tjustifyContent=\"center\"\n\t\t\talignItems=\"center\"\n\t\t>\n\t\t\t<Box height=\"15px\" width=\"15px\" bg=\"black\" borderRadius=\"100%\" zIndex={10} />\n\n\t\t\t{[...Array(60).keys()].map(key => <Indicator key={key} deg={minInDeg * (key + 1)} />)}\n\n\t\t\t<ClockNumber number={12} deg={0} />\n\n\t\t\t<ClockHand color=\"reds.300\" handSize={getHandSize(30)} deg={degSec} />\n\t\t\t<ClockHand color=\"black\" handSize={getHandSize(30)} deg={degMin} />\n\t\t\t<ClockHand color=\"black\" handSize={getHandSize(100)} deg={degHou} />\n\t\t</Flex>\n\t);\n};\n\nconst Indicator: React.FC<IndicatorProps> = ({ deg }) => (\n\t<Box\n\t\tposition=\"absolute\"\n\t\tbg=\"black\"\n\t\theight={indicatorSize}\n\t\twidth=\"3px\"\n\t\tstyle={{ transform: `rotate(${deg}deg) translateY(-${getIndicatorOffset()}px)` }}\n\t/>\n);\n\ninterface IndicatorProps {\n\tdeg: number;\n}\n\nconst ClockNumber: React.FC<ClockNumberProps> = ({ number, deg }) => (\n\t<Box\n\t\tposition=\"absolute\"\n\t\theight={size / 2}\n\t\tstyle={{ transform: `rotate(${deg}deg) translateY(-${size}px)` }}\n\t>\n\t\t<Heading>{number}</Heading>\n\t</Box>\n);\n\ninterface ClockNumberProps {\n\tnumber: number;\n\tdeg: number\n}\n\nconst ClockHand: React.FC<ClockHandProps> = ({ color, handSize, deg }) => (\n\t<Box\n\t\theight={handSize}\n\t\twidth=\"5px\"\n\t\tbg={color}\n\t\tposition=\"absolute\"\n\t\tstyle={{ transform: `rotate(${deg}deg) translateY(-${handSize / 2}px)` }}\n\t/>\n);\n\ninterface ClockHandProps {\n\tcolor: string;\n\thandSize: number;\n\tdeg: number;\n}"]},"metadata":{},"sourceType":"module"}