{"ast":null,"code":"var _jsxFileName = \"/home/lars/Code/manager/src/atoms/modals/modal.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useWindowDimensions } from '../hooks';\nimport { Box, Flex } from '../layout';\nimport { Button } from '../input';\nimport { Heading } from '../typography';\nexport var Modal = function Modal(_ref) {\n  var title = _ref.title,\n      children = _ref.children;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  return __jsx(Box, {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    bg: \"modalBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Flex, {\n    width: getModalWidth(width),\n    margin: \"0 auto\",\n    bg: \"grays.100\",\n    borderRadius: 3,\n    marginTop: \"10vh\",\n    p: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(Flex, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, title), __jsx(Button, {\n    variant: \"text\",\n    position: \"relative\",\n    right: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"x\")), children));\n};\n\nvar getModalWidth = function getModalWidth(width) {\n  if (width < 500) return 'modal.width.tiny';\n  if (width < 600) return 'modal.width.small';\n  if (width < 700) return 'modal.width.medium';\n  return 'modal.width.large';\n};","map":{"version":3,"sources":["/home/lars/Code/manager/src/atoms/modals/modal.tsx"],"names":["React","useWindowDimensions","Box","Flex","Button","Heading","Modal","title","children","width","getModalWidth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,UAApC;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,WAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAO,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,OAAyB;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,6BACrCP,mBAAmB,EADkB;AAAA,MAC/CQ,KAD+C,wBAC/CA,KAD+C;;AAGvD,SACC,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,GAAG,EAAE,CAA9B;AAAiC,IAAA,KAAK,EAAE,CAAxC;AAA2C,IAAA,MAAM,EAAE,CAAnD;AAAsD,IAAA,IAAI,EAAE,CAA5D;AAA+D,IAAA,EAAE,EAAC,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AACC,IAAA,KAAK,EAAEC,aAAa,CAACD,KAAD,CADrB;AAEC,IAAA,MAAM,EAAC,QAFR;AAGC,IAAA,EAAE,EAAC,WAHJ;AAIC,IAAA,YAAY,EAAE,CAJf;AAKC,IAAA,SAAS,EAAC,MALX;AAMC,IAAA,CAAC,EAAE,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUF,KAAV,CADD,EAEC,MAAC,MAAD;AACC,IAAA,OAAO,EAAC,MADT;AAEC,IAAA,QAAQ,EAAC,UAFV;AAGC,IAAA,KAAK,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFD,CARD,EAgBEC,QAhBF,CADD,CADD;AAsBA,CAzBM;;AA2BP,IAAME,aAAa,GAAG,SAAhBA,aAAgB,CAACD,KAAD,EAAmB;AACxC,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,kBAAP;AACjB,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,mBAAP;AACjB,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,oBAAP;AACjB,SAAO,mBAAP;AACA,CALD","sourcesContent":["import React from 'react';\n\nimport { useWindowDimensions } from '../hooks';\nimport { Box, Flex } from '../layout';\nimport { Button } from '../input';\nimport { Heading } from '../typography';\n\nexport const Modal: React.FC = ({ title, children }) => {\n\tconst { width } = useWindowDimensions();\n\n\treturn (\n\t\t<Box position=\"absolute\" top={0} right={0} bottom={0} left={0} bg=\"modalBackground\">\n\t\t\t<Flex\n\t\t\t\twidth={getModalWidth(width)}\n\t\t\t\tmargin=\"0 auto\"\n\t\t\t\tbg=\"grays.100\"\n\t\t\t\tborderRadius={3}\n\t\t\t\tmarginTop=\"10vh\"\n\t\t\t\tp={4}\n\t\t\t>\n\t\t\t\t<Flex>\n\t\t\t\t\t<Heading>{title}</Heading>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"text\"\n\t\t\t\t\t\tposition=\"relative\"\n\t\t\t\t\t\tright={16}\n\t\t\t\t\t>x</Button>\n\t\t\t\t</Flex>\n\t\t\t\t{children}\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nconst getModalWidth = (width: number) => {\n\tif (width < 500) return 'modal.width.tiny';\n\tif (width < 600) return 'modal.width.small';\n\tif (width < 700) return 'modal.width.medium';\n\treturn 'modal.width.large';\n};"]},"metadata":{},"sourceType":"module"}