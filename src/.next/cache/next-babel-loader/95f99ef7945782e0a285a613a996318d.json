{"ast":null,"code":"var _jsxFileName = \"/home/lars/Code/manager/src/atoms/modals/modal.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useWindowDimensions } from '../hooks';\nimport { Box, Flex } from '../layout';\nimport { Button } from '../input';\nimport { Heading } from '../typography';\nexport var Modal = function Modal(_ref) {\n  var onClose = _ref.onClose,\n      title = _ref.title,\n      children = _ref.children;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width;\n\n  return __jsx(Box, {\n    onClick: onClose,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    bg: \"modalBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Flex, {\n    onClick: function onClick(event) {\n      return event.stopPropagation();\n    },\n    width: getModalWidth(width),\n    margin: \"0 auto\",\n    bg: \"grays.100\",\n    borderRadius: 3,\n    marginTop: \"10vh\",\n    p: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Flex, {\n    justifyContent: \"space-between\",\n    width: \"full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, !!title && __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, title), __jsx(Button, {\n    variant: \"round\",\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(Close, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), children));\n};\n\nvar getModalWidth = function getModalWidth(width) {\n  if (width < 500) return 'modal.width.tiny';\n  if (width < 600) return 'modal.width.small';\n  if (width < 700) return 'modal.width.medium';\n  return 'modal.width.large';\n};","map":{"version":3,"sources":["/home/lars/Code/manager/src/atoms/modals/modal.tsx"],"names":["React","useWindowDimensions","Box","Flex","Button","Heading","Modal","onClose","title","children","width","event","stopPropagation","getModalWidth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,UAApC;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,WAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAO,IAAMC,KAA2B,GAAG,SAA9BA,KAA8B,OAAkC;AAAA,MAA/BC,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,6BAC1DR,mBAAmB,EADuC;AAAA,MACpES,KADoE,wBACpEA,KADoE;;AAG5E,SACC,MAAC,GAAD;AACC,IAAA,OAAO,EAAEH,OADV;AAEC,IAAA,QAAQ,EAAC,UAFV;AAGC,IAAA,GAAG,EAAE,CAHN;AAIC,IAAA,KAAK,EAAE,CAJR;AAKC,IAAA,MAAM,EAAE,CALT;AAMC,IAAA,IAAI,EAAE,CANP;AAOC,IAAA,EAAE,EAAC,iBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC,MAAC,IAAD;AACC,IAAA,OAAO,EAAE,iBAAAI,KAAK;AAAA,aAAIA,KAAK,CAACC,eAAN,EAAJ;AAAA,KADf;AAEC,IAAA,KAAK,EAAEC,aAAa,CAACH,KAAD,CAFrB;AAGC,IAAA,MAAM,EAAC,QAHR;AAIC,IAAA,EAAE,EAAC,WAJJ;AAKC,IAAA,YAAY,EAAE,CALf;AAMC,IAAA,SAAS,EAAC,MANX;AAOC,IAAA,CAAC,EAAE,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC,MAAC,IAAD;AACC,IAAA,cAAc,EAAC,eADhB;AAEC,IAAA,KAAK,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,CAAC,CAACF,KAAF,IAAW,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUA,KAAV,CAJb,EAKC,MAAC,MAAD;AACC,IAAA,OAAO,EAAC,OADT;AAEC,IAAA,OAAO,EAAED,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGC,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CALD,CATD,EAmBEE,QAnBF,CATD,CADD;AAiCA,CApCM;;AAsCP,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACH,KAAD,EAAmB;AACxC,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,kBAAP;AACjB,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,mBAAP;AACjB,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,oBAAP;AACjB,SAAO,mBAAP;AACA,CALD","sourcesContent":["import React from 'react';\n\nimport { useWindowDimensions } from '../hooks';\nimport { Box, Flex } from '../layout';\nimport { Button } from '../input';\nimport { Heading } from '../typography';\n\nexport const Modal: React.FC<ModalProps> = ({ onClose, title, children }) => {\n\tconst { width } = useWindowDimensions();\n\n\treturn (\n\t\t<Box\n\t\t\tonClick={onClose}\n\t\t\tposition=\"absolute\"\n\t\t\ttop={0}\n\t\t\tright={0}\n\t\t\tbottom={0}\n\t\t\tleft={0}\n\t\t\tbg=\"modalBackground\"\n\t\t>\n\t\t\t<Flex\n\t\t\t\tonClick={event => event.stopPropagation()}\n\t\t\t\twidth={getModalWidth(width)}\n\t\t\t\tmargin=\"0 auto\"\n\t\t\t\tbg=\"grays.100\"\n\t\t\t\tborderRadius={3}\n\t\t\t\tmarginTop=\"10vh\"\n\t\t\t\tp={4}\n\t\t\t>\n\t\t\t\t<Flex\n\t\t\t\t\tjustifyContent=\"space-between\"\n\t\t\t\t\twidth=\"full\"\n\t\t\t\t>\n\t\t\t\t\t{!!title && <Heading>{title}</Heading>}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"round\"\n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t><Close/></Button>\n\t\t\t\t</Flex>\n\t\t\t\t{children}\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nconst getModalWidth = (width: number) => {\n\tif (width < 500) return 'modal.width.tiny';\n\tif (width < 600) return 'modal.width.small';\n\tif (width < 700) return 'modal.width.medium';\n\treturn 'modal.width.large';\n};\n\ninterface ModalProps {\n\tonClose: () => void;\n\ttitle?: React.ReactNode;\n}"]},"metadata":{},"sourceType":"module"}