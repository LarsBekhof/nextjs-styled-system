{"ast":null,"code":"var _jsxFileName = \"/home/lars/Code/manager/src/atoms/input/text.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { color, border, typography } from 'styled-system';\nimport { css } from '@styled-system/css';\nimport { Box } from '../layout';\nimport { Label } from '../typography';\nexport const TextInput = props => __jsx(Box, {\n  mb: 4,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, !!props.label && __jsx(Label, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, props.label), __jsx(StyledTextInput, _extends({}, props, {\n  bg: \"grays.100\",\n  borderColor: props.error && props.error.length ? 'reds.300' : 'grays.300',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})), !!props.error && __jsx(Label, {\n  color: \"reds.300\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, props.error));\nconst textInputStyle = css({\n  fontFamily: 'input',\n  fontSize: 'input',\n  lineHeight: 'input',\n  color: 'grays.300',\n  width: 'full',\n  borderTopWidth: 0,\n  borderLeftWidth: 0,\n  borderRightWidth: 0,\n  borderTopLeftRadius: 2,\n  borderTopRightRadius: 2,\n  borderColor: 'reds.300',\n  pl: 2,\n  pr: 2\n});\nconst StyledTextInput = styled.input(textInputStyle, color, border, typography);\nconst StyledTextareaInput = styled.textarea(textInputStyle, color, border, typography);","map":{"version":3,"sources":["/home/lars/Code/manager/src/atoms/input/text.tsx"],"names":["React","styled","color","border","typography","css","Box","Label","TextInput","props","label","error","length","textInputStyle","fontFamily","fontSize","lineHeight","width","borderTopWidth","borderLeftWidth","borderRightWidth","borderTopLeftRadius","borderTopRightRadius","borderColor","pl","pr","StyledTextInput","input","StyledTextareaInput","textarea"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SACCC,KADD,EAICC,MAJD,EAMCC,UAND,QAQO,eARP;AASA,SAASC,GAAT,QAAoB,oBAApB;AAEA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,OAAO,MAAMC,SAAmC,GAAGC,KAAK,IACvD,MAAC,GAAD;AAAK,EAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,CAAC,CAACA,KAAK,CAACC,KAAR,IAAiB,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAQD,KAAK,CAACC,KAAd,CADnB,EAEC,MAAC,eAAD,eACKD,KADL;AAEC,EAAA,EAAE,EAAC,WAFJ;AAGC,EAAA,WAAW,EAAEA,KAAK,CAACE,KAAN,IAAeF,KAAK,CAACE,KAAN,CAAYC,MAA3B,GAAoC,UAApC,GAAiD,WAH/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFD,EAOE,CAAC,CAACH,KAAK,CAACE,KAAR,IAAiB,MAAC,KAAD;AAAO,EAAA,KAAK,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBF,KAAK,CAACE,KAA/B,CAPnB,CADM;AAqBP,MAAME,cAAc,GAAGR,GAAG,CAAC;AAC1BS,EAAAA,UAAU,EAAE,OADc;AAE1BC,EAAAA,QAAQ,EAAE,OAFgB;AAG1BC,EAAAA,UAAU,EAAE,OAHc;AAI1Bd,EAAAA,KAAK,EAAE,WAJmB;AAK1Be,EAAAA,KAAK,EAAE,MALmB;AAM1BC,EAAAA,cAAc,EAAE,CANU;AAO1BC,EAAAA,eAAe,EAAE,CAPS;AAQ1BC,EAAAA,gBAAgB,EAAE,CARQ;AAS1BC,EAAAA,mBAAmB,EAAE,CATK;AAU1BC,EAAAA,oBAAoB,EAAE,CAVI;AAW1BC,EAAAA,WAAW,EAAE,UAXa;AAY1BC,EAAAA,EAAE,EAAE,CAZsB;AAa1BC,EAAAA,EAAE,EAAE;AAbsB,CAAD,CAA1B;AAgBA,MAAMC,eAAe,GAAGzB,MAAM,CAAC0B,KAAP,CAKvBd,cALuB,EAMvBX,KANuB,EAOvBC,MAPuB,EAQvBC,UARuB,CAAxB;AAWA,MAAMwB,mBAAmB,GAAG3B,MAAM,CAAC4B,QAAP,CAK3BhB,cAL2B,EAM3BX,KAN2B,EAO3BC,MAP2B,EAQ3BC,UAR2B,CAA5B","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport {\n\tcolor,\n\tColorProps,\n\tColorStyleProps,\n\tborder,\n\tBorderProps,\n\ttypography,\n\tTypographyProps,\n} from 'styled-system';\nimport { css } from '@styled-system/css';\n\nimport { Box } from '../layout';\nimport { Label } from '../typography';\n\nexport const TextInput: React.FC<TextInputProps> = props => (\n\t<Box mb={4}>\n\t\t{!!props.label && <Label>{props.label}</Label>}\n\t\t<StyledTextInput\n\t\t\t{...props}\n\t\t\tbg=\"grays.100\"\n\t\t\tborderColor={props.error && props.error.length ? 'reds.300' : 'grays.300'}\n\t\t/>\n\t\t{!!props.error && <Label color=\"reds.300\">{props.error}</Label>}\n\t</Box>\n);\n\ninterface TextInputProps extends\n\tColorStyleProps,\n\tBorderProps,\n\tTypographyProps,\n\tReact.InputHTMLAttributes<HTMLInputElement> {\n\terror?: string;\n\tlabel?: string;\n}\n\nconst textInputStyle = css({\n\tfontFamily: 'input',\n\tfontSize: 'input',\n\tlineHeight: 'input',\n\tcolor: 'grays.300',\n\twidth: 'full',\n\tborderTopWidth: 0,\n\tborderLeftWidth: 0,\n\tborderRightWidth: 0,\n\tborderTopLeftRadius: 2,\n\tborderTopRightRadius: 2,\n\tborderColor: 'reds.300',\n\tpl: 2,\n\tpr: 2,\n});\n\nconst StyledTextInput = styled.input<\n\tColorProps &\n\tBorderProps &\n\tTypographyProps\n>(\n\ttextInputStyle,\n\tcolor,\n\tborder,\n\ttypography,\n);\n\nconst StyledTextareaInput = styled.textarea<\n\tColorProps &\n\tBorderProps &\n\tTypographyProps\n>(\n\ttextInputStyle,\n\tcolor,\n\tborder,\n\ttypography,\n);"]},"metadata":{},"sourceType":"module"}