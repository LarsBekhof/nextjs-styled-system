{"ast":null,"code":"var _jsxFileName = \"/home/lars/Code/manager/src/atoms/modals/modal.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useWindowDimensions } from '../hooks';\nimport { Box, Flex } from '../layout';\nimport { Button } from '../input';\nimport { Heading } from '../typography';\nexport const Modal = ({\n  onClose,\n  title,\n  children\n}) => {\n  const {\n    width\n  } = useWindowDimensions();\n  return __jsx(Box, {\n    onClick: onClose,\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    bg: \"modalBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Flex, {\n    onClick: event => event.stopPropagation(),\n    width: getModalWidth(width),\n    margin: \"0 auto\",\n    bg: \"grays.100\",\n    borderRadius: 3,\n    marginTop: \"10vh\",\n    p: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, __jsx(Flex, {\n    flexDirection: \"row\",\n    alignItems: \"space-between\",\n    width: \"full\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, !!title && __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, title), __jsx(Button, {\n    variant: \"round\",\n    onClick: onClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"x\")), children));\n};\n\nconst getModalWidth = width => {\n  if (width < 500) return 'modal.width.tiny';\n  if (width < 600) return 'modal.width.small';\n  if (width < 700) return 'modal.width.medium';\n  return 'modal.width.large';\n};","map":{"version":3,"sources":["/home/lars/Code/manager/src/atoms/modals/modal.tsx"],"names":["React","useWindowDimensions","Box","Flex","Button","Heading","Modal","onClose","title","children","width","event","stopPropagation","getModalWidth"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,UAApC;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,WAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,eAAxB;AAEA,OAAO,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AAC5E,QAAM;AAAEC,IAAAA;AAAF,MAAYT,mBAAmB,EAArC;AAEA,SACC,MAAC,GAAD;AACC,IAAA,OAAO,EAAEM,OADV;AAEC,IAAA,QAAQ,EAAC,UAFV;AAGC,IAAA,GAAG,EAAE,CAHN;AAIC,IAAA,KAAK,EAAE,CAJR;AAKC,IAAA,MAAM,EAAE,CALT;AAMC,IAAA,IAAI,EAAE,CANP;AAOC,IAAA,EAAE,EAAC,iBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC,MAAC,IAAD;AACC,IAAA,OAAO,EAAEI,KAAK,IAAIA,KAAK,CAACC,eAAN,EADnB;AAEC,IAAA,KAAK,EAAEC,aAAa,CAACH,KAAD,CAFrB;AAGC,IAAA,MAAM,EAAC,QAHR;AAIC,IAAA,EAAE,EAAC,WAJJ;AAKC,IAAA,YAAY,EAAE,CALf;AAMC,IAAA,SAAS,EAAC,MANX;AAOC,IAAA,CAAC,EAAE,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC,MAAC,IAAD;AACC,IAAA,aAAa,EAAC,KADf;AAEC,IAAA,UAAU,EAAC,eAFZ;AAGC,IAAA,KAAK,EAAC,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,CAAC,CAACF,KAAF,IAAW,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUA,KAAV,CALb,EAMC,MAAC,MAAD;AACC,IAAA,OAAO,EAAC,OADT;AAEC,IAAA,OAAO,EAAED,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAND,CATD,EAoBEE,QApBF,CATD,CADD;AAkCA,CArCM;;AAuCP,MAAMI,aAAa,GAAIH,KAAD,IAAmB;AACxC,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,kBAAP;AACjB,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,mBAAP;AACjB,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,oBAAP;AACjB,SAAO,mBAAP;AACA,CALD","sourcesContent":["import React from 'react';\n\nimport { useWindowDimensions } from '../hooks';\nimport { Box, Flex } from '../layout';\nimport { Button } from '../input';\nimport { Heading } from '../typography';\n\nexport const Modal: React.FC<ModalProps> = ({ onClose, title, children }) => {\n\tconst { width } = useWindowDimensions();\n\n\treturn (\n\t\t<Box\n\t\t\tonClick={onClose}\n\t\t\tposition=\"absolute\"\n\t\t\ttop={0}\n\t\t\tright={0}\n\t\t\tbottom={0}\n\t\t\tleft={0}\n\t\t\tbg=\"modalBackground\"\n\t\t>\n\t\t\t<Flex\n\t\t\t\tonClick={event => event.stopPropagation()}\n\t\t\t\twidth={getModalWidth(width)}\n\t\t\t\tmargin=\"0 auto\"\n\t\t\t\tbg=\"grays.100\"\n\t\t\t\tborderRadius={3}\n\t\t\t\tmarginTop=\"10vh\"\n\t\t\t\tp={4}\n\t\t\t>\n\t\t\t\t<Flex\n\t\t\t\t\tflexDirection=\"row\"\n\t\t\t\t\talignItems=\"space-between\"\n\t\t\t\t\twidth=\"full\"\n\t\t\t\t>\n\t\t\t\t\t{!!title && <Heading>{title}</Heading>}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"round\"\n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t>x</Button>\n\t\t\t\t</Flex>\n\t\t\t\t{children}\n\t\t\t</Flex>\n\t\t</Box>\n\t);\n};\n\nconst getModalWidth = (width: number) => {\n\tif (width < 500) return 'modal.width.tiny';\n\tif (width < 600) return 'modal.width.small';\n\tif (width < 700) return 'modal.width.medium';\n\treturn 'modal.width.large';\n};\n\ninterface ModalProps {\n\tonClose: () => void;\n\ttitle?: React.ReactNode;\n}"]},"metadata":{},"sourceType":"module"}