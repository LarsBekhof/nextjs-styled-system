{"ast":null,"code":"var _jsxFileName = \"/home/lars/Code/manager/src/pages/playground.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Box } from '../atoms/layout';\nimport { TextInput, Button, TextareaInput } from '../atoms/input';\nimport { Heading, Paragraph } from '../atoms/typography';\nimport { Modal } from '../atoms/modals';\nexport default (function () {\n  var _useState = useState(true),\n      modalIsOpen = _useState[0],\n      setModalIsOpen = _useState[1];\n\n  return __jsx(Box, {\n    m: \"0 auto\",\n    width: \"500px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(TextInput, {\n    defaultValue: \"This is an input.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    placeholder: \"This is an input with placeholder.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    defaultValue: \"This is an input with an error.\",\n    error: \"This is the error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    defaultValue: \"This is an input with a label.\",\n    label: \"This is the label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), __jsx(TextInput, {\n    defaultValue: \"This is an input with a label and an error.\",\n    label: \"This is the label\",\n    error: \"This is the error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), __jsx(TextareaInput, {\n    defaultValue: \"This is a textarea.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"This is a heading 1.\"), __jsx(Heading, {\n    variant: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"This is a heading 2.\"), __jsx(Heading, {\n    variant: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"This is a heading 3.\"), __jsx(Paragraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"This is a paragraph. \"), __jsx(Paragraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"This is the second paragraph.\"), __jsx(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"This is a button\"), __jsx(Button, {\n    variant: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"This is a text button\")), __jsx(Button, {\n    onClick: function onClick() {\n      return setModalIsOpen(true);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Open modal\"), modalIsOpen && __jsx(Modal, {\n    title: __jsx(Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"This is a modal\"),\n    onClose: function onClose() {\n      return setModalIsOpen(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, __jsx(Paragraph, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"This is some modal content\")));\n});","map":{"version":3,"sources":["/home/lars/Code/manager/src/pages/playground.tsx"],"names":["React","useState","Box","TextInput","Button","TextareaInput","Heading","Paragraph","Modal","modalIsOpen","setModalIsOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,aAA5B,QAAiD,gBAAjD;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,qBAAnC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAEA,gBAAe,YAAM;AAAA,kBACkBP,QAAQ,CAAC,IAAD,CAD1B;AAAA,MACbQ,WADa;AAAA,MACAC,cADA;;AAGpB,SACC,MAAC,GAAD;AAAK,IAAA,CAAC,EAAC,QAAP;AAAgB,IAAA,KAAK,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAW,IAAA,YAAY,EAAC,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,oCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,MAAC,SAAD;AACC,IAAA,YAAY,EAAC,iCADd;AAEC,IAAA,KAAK,EAAC,mBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAOC,MAAC,SAAD;AACC,IAAA,YAAY,EAAC,gCADd;AAEC,IAAA,KAAK,EAAC,mBAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,EAWC,MAAC,SAAD;AACC,IAAA,YAAY,EAAC,6CADd;AAEC,IAAA,KAAK,EAAC,mBAFP;AAGC,IAAA,KAAK,EAAC,mBAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,EAgBC,MAAC,aAAD;AACC,IAAA,YAAY,EAAC,qBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,EAmBC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAnBD,EAoBC,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BApBD,EAqBC,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BArBD,EAsBC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAtBD,EAuBC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAvBD,EAwBC,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFD,CAxBD,EA4BC,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMA,cAAc,CAAC,IAAD,CAApB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA5BD,EA6BED,WAAW,IACX,MAAC,KAAD;AACC,IAAA,KAAK,EAAE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADR;AAEC,IAAA,OAAO,EAAE;AAAA,aAAMC,cAAc,CAAC,KAAD,CAApB;AAAA,KAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJD,CA9BF,CADD;AAwCA,CA3CD","sourcesContent":["import React, { useState } from 'react';\n\nimport { Box } from '../atoms/layout';\nimport { TextInput, Button, TextareaInput } from '../atoms/input';\nimport { Heading, Paragraph } from '../atoms/typography';\nimport { Modal } from '../atoms/modals';\n\nexport default () => {\n\tconst [modalIsOpen, setModalIsOpen] = useState(true);\n\n\treturn (\n\t\t<Box m=\"0 auto\" width=\"500px\">\n\t\t\t<TextInput defaultValue=\"This is an input.\" />\n\t\t\t<TextInput placeholder=\"This is an input with placeholder.\" />\n\t\t\t<TextInput\n\t\t\t\tdefaultValue=\"This is an input with an error.\"\n\t\t\t\terror=\"This is the error\"\n\t\t\t/>\n\t\t\t<TextInput\n\t\t\t\tdefaultValue=\"This is an input with a label.\"\n\t\t\t\tlabel=\"This is the label\"\n\t\t\t/>\n\t\t\t<TextInput\n\t\t\t\tdefaultValue=\"This is an input with a label and an error.\"\n\t\t\t\tlabel=\"This is the label\"\n\t\t\t\terror=\"This is the error\"\n\t\t\t/>\n\t\t\t<TextareaInput\n\t\t\t\tdefaultValue=\"This is a textarea.\"\n\t\t\t/>\n\t\t\t<Heading>This is a heading 1.</Heading>\n\t\t\t<Heading variant=\"2\">This is a heading 2.</Heading>\n\t\t\t<Heading variant=\"3\">This is a heading 3.</Heading>\n\t\t\t<Paragraph>This is a paragraph. </Paragraph>\n\t\t\t<Paragraph>This is the second paragraph.</Paragraph>\n\t\t\t<Box>\n\t\t\t\t<Button>This is a button</Button>\n\t\t\t\t<Button variant=\"text\">This is a text button</Button>\n\t\t\t</Box>\n\t\t\t<Button onClick={() => setModalIsOpen(true)}>Open modal</Button>\n\t\t\t{modalIsOpen && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={<Heading>This is a modal</Heading>}\n\t\t\t\t\tonClose={() => setModalIsOpen(false)}\n\t\t\t\t>\n\t\t\t\t\t<Paragraph>This is some modal content</Paragraph>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t</Box>\n\t);\n};"]},"metadata":{},"sourceType":"module"}