{"ast":null,"code":"var _jsxFileName = \"/home/lars/Code/manager/src/atoms/modals/modal.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useWindowDimensions } from '../hooks';\nimport { Box } from '../layout';\nexport const Modal = ({\n  children\n}) => {\n  const dimensions = useWindowDimensions();\n  return __jsx(Box, {\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    bg: \"modalBackground\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Box, {\n    width: getModalWidth(dimensions.width),\n    bg: \"grays.100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, children));\n};\n\nconst getModalWidth = width => {\n  if (width < 400) return 'modal.width.small';\n  if (width < 700) return 'modal.width.medium';\n  return 'modal.width.large';\n};","map":{"version":3,"sources":["/home/lars/Code/manager/src/atoms/modals/modal.tsx"],"names":["React","useWindowDimensions","Box","Modal","children","dimensions","getModalWidth","width"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,mBAAT,QAAoC,UAApC;AAEA,SAASC,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,KAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAMC,UAAU,GAAGJ,mBAAmB,EAAtC;AAEA,SACC,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,IAAA,GAAG,EAAE,CAA9B;AAAiC,IAAA,KAAK,EAAE,CAAxC;AAA2C,IAAA,MAAM,EAAE,CAAnD;AAAsD,IAAA,IAAI,EAAE,CAA5D;AAA+D,IAAA,EAAE,EAAC,iBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,GAAD;AACC,IAAA,KAAK,EAAEK,aAAa,CAACD,UAAU,CAACE,KAAZ,CADrB;AAEC,IAAA,EAAE,EAAC,WAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIEH,QAJF,CADD,CADD;AAUA,CAbM;;AAeP,MAAME,aAAa,GAAIC,KAAD,IAAmB;AACxC,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,mBAAP;AACjB,MAAIA,KAAK,GAAG,GAAZ,EAAiB,OAAO,oBAAP;AACjB,SAAO,mBAAP;AACA,CAJD","sourcesContent":["import React from 'react';\n\nimport { useWindowDimensions } from '../hooks';\n\nimport { Box } from '../layout';\n\nexport const Modal: React.FC = ({ children }) => {\n\tconst dimensions = useWindowDimensions();\n\n\treturn (\n\t\t<Box position=\"absolute\" top={0} right={0} bottom={0} left={0} bg=\"modalBackground\">\n\t\t\t<Box\n\t\t\t\twidth={getModalWidth(dimensions.width)}\n\t\t\t\tbg=\"grays.100\"\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst getModalWidth = (width: number) => {\n\tif (width < 400) return 'modal.width.small';\n\tif (width < 700) return 'modal.width.medium';\n\treturn 'modal.width.large';\n};"]},"metadata":{},"sourceType":"module"}